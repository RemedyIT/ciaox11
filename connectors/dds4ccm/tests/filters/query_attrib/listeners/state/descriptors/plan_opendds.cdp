<!--
  @file      plan_opendds.cdp
  @author    Johnny Willemsen

  @copyright Copyright (c) Remedy IT Expertise BV
-->

<Deployment:DeploymentPlan
   xmlns:Deployment="http://www.omg.org/Deployment"
   xmlns:xmi="http://www.omg.org/XMI"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.omg.org/Deployment Deployment.xsd">
  <label>QA_StateListen_Depl_1</label>
  <UUID>QA_StateListen_Depl_1</UUID>

  <implementation xmi:id="ReceiverComponentImplementation">
    <name>ReceiverComponentImplementation</name>
    <source/>
    <artifact xmi:idref="Receiver_ExecArtifact" />
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_QA_State_Listen_Test_Receiver_Impl</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_QA_State_Listen_Test_Receiver_Servant</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>Receiver_svnt</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>qa_sl_receiver_exec</string>
        </value>
      </value>
    </execParameter>
  </implementation>

  <implementation xmi:id="Common_Connector_Implementation">
    <name>Common_Connector_Implementation</name>
    <source/>
    <artifact xmi:idref="Common_Connector_ExecArtifact" />
    <execParameter>
      <!-- entrypoint as exec parameter (see 10.6.1) -->
      <name>nl.remedy.it.DnCX11.Executor.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_CommonTestConnector_DDS_State_Impl</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_CommonTestConnector_DDS_State_Servant</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>common_connector_conn</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>common_connector_conn</string>
        </value>
      </value>
    </execParameter>
  </implementation>

  <implementation xmi:id="SenderComponentImplementation">
    <name>SenderComponentImplementation</name>
    <source/>
    <artifact xmi:idref="Sender_ExecArtifact" />
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_Filters_Common_State_Listen_Test_Sender_Impl</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_Filters_Common_State_Listen_Test_Sender_Servant</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>Sender_svnt</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>Sender_exec</string>
        </value>
      </value>
    </execParameter>
  </implementation>
  <implementation xmi:id="WriterStarterCORBAConnectorComponentImplementation">
    <name>WriterStarterCORBAConnectorComponentImplementation</name>
    <source/>
    <artifact xmi:idref="WriterStarterCORBAConnector_ExecArtifact" />
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_WriterStarter_SRR_CORBA_Connector_Impl</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_WriterStarter_SRR_CORBA_Connector_Servant</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>writer_starter_corba_conn</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>writer_starter_corba_conn</string>
        </value>
      </value>
    </execParameter>
  </implementation>
<implementation xmi:id="TimeTriggerConnectorImplementation">
    <name>TimeTriggerConnectorImplementation</name>
    <source/>
    <execParameter>
      <!-- entrypoint as exec parameter (see 10.6.1) -->
      <name>nl.remedy.it.DnCX11.Executor.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_CIAOX11_TT_TimedTrigger_Impl</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Servant.Factory</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>create_CIAOX11_TT_TimedTrigger_Servant</string>
        </value>
      </value>
    </execParameter>
    <execParameter>
      <name>nl.remedy.it.DnCX11.Executor.Artifact</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>ciaox11_tt4ccm_conn</string>
        </value>
      </value>
    </execParameter>
  </implementation>

  <instance xmi:id="TimeTriggerConnectorInstance">
    <name>TimeTriggerConnector</name>
    <node>SenderNode</node>
    <!-- hostname -->
    <source/>
    <implementation xmi:idref="TimeTriggerConnectorImplementation" />
  </instance>

  <instance xmi:id="ReceiverComponentInstance">
    <name>ReceiverComponent</name>
    <node>ReceiverNode</node>
    <source/>
    <implementation xmi:idref="ReceiverComponentImplementation" />
  </instance>

  <instance xmi:id="QA_StateListen_SenderConnectorInstance">
    <name>QA_StateListen_SenderConnectorInstance</name>
    <node>SenderNode</node>
    <source/>
    <implementation xmi:idref="Common_Connector_Implementation" />
    <configProperty>
      <name>topic_name</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>QA_StateListen</string>
        </value>
      </value>
    </configProperty>
    <configProperty>
      <name>qos_profile</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>defaultlibrary#defaultprofile</string>
        </value>
      </value>
    </configProperty>
  </instance>

  <instance xmi:id="QA_StateListen_ReceiverConnectorInstance_1">
    <name>QA_StateListen_ReceiverConnectorInstance_1</name>
    <node>ReceiverNode</node>
    <source/>
    <implementation xmi:idref="Common_Connector_Implementation" />
    <configProperty>
      <name>topic_name</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>QA_StateListen</string>
        </value>
      </value>
    </configProperty>
    <configProperty>
      <name>qos_profile</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>defaultlibrary#defaultprofile</string>
        </value>
      </value>
    </configProperty>
  </instance>

  <instance xmi:id="QA_StateListen_ReceiverConnectorInstance_2">
    <name>QA_StateListen_ReceiverConnectorInstance_2</name>
    <node>ReceiverNode</node>
    <source/>
    <implementation xmi:idref="Common_Connector_Implementation" />
    <configProperty>
      <name>topic_name</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>QA_StateListen</string>
        </value>
      </value>
    </configProperty>
    <configProperty>
      <name>qos_profile</name>
      <value>
        <type>
          <kind>tk_string</kind>
        </type>
        <value>
          <string>defaultlibrary#defaultprofile</string>
        </value>
      </value>
    </configProperty>
  </instance>

  <instance xmi:id="SenderComponentInstance">
    <name>SenderComponent</name>
    <node>SenderNode</node>
    <source/>
    <implementation xmi:idref="SenderComponentImplementation" />
  </instance>

  <instance xmi:id="WriterStarterSRRConnector_ReceiverConnectorInstance">
    <name>WriterStarterSRRConnector_ReceiverConnectorInstance</name>
    <node>ReceiverNode</node>
    <source/>
    <implementation xmi:idref="WriterStarterCORBAConnectorComponentImplementation" />
  </instance>
  <instance xmi:id="WriterStarterSRRConnector_SenderConnectorInstance">
    <name>WriterStarterSRRConnector_SenderConnectorInstance</name>
    <node>SenderNode</node>
    <source/>
    <implementation xmi:idref="WriterStarterCORBAConnectorComponentImplementation" />
  </instance>

  <connection>
    <name>writer_starter_from_receiver_to_srr_receiver</name>
    <internalEndpoint>
      <portName>srr_facet</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="WriterStarterSRRConnector_ReceiverConnectorInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>writer_start</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>writer_starter_from_srr_receiver_to_srr_sender</name>
    <internalEndpoint>
      <portName>srr_facet</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="WriterStarterSRRConnector_SenderConnectorInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>srr_receptacle</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="WriterStarterSRRConnector_ReceiverConnectorInstance" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>writer_starter_from_srr_sender_to_sender</name>
    <internalEndpoint>
      <portName>start_writing</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="SenderComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>srr_receptacle</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="WriterStarterSRRConnector_SenderConnectorInstance" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>reader_connection_1</name>
    <internalEndpoint>
      <portName>listen_port_1_data</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>push_state_observer_data</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="QA_StateListen_ReceiverConnectorInstance_1" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>listener_1</name>
    <internalEndpoint>
      <portName>listen_port_1_data_listener</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>push_state_observer_data_listener</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="QA_StateListen_ReceiverConnectorInstance_1" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>datacontrol_1</name>
    <internalEndpoint>
      <portName>listen_port_1_data_control</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>push_state_observer_data_control</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="QA_StateListen_ReceiverConnectorInstance_1" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>reader_connection_2</name>
    <internalEndpoint>
      <portName>listen_port_2_data</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>push_state_observer_data</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="QA_StateListen_ReceiverConnectorInstance_2" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>listener_2</name>
    <internalEndpoint>
      <portName>listen_port_2_data_listener</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>push_state_observer_data_listener</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="QA_StateListen_ReceiverConnectorInstance_2" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>datacontrol_2</name>
    <internalEndpoint>
      <portName>listen_port_2_data_control</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="ReceiverComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>push_state_observer_data_control</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="QA_StateListen_ReceiverConnectorInstance_2" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>updater_connection</name>
    <internalEndpoint>
      <portName>info_update_data</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="SenderComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>observable_data</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="QA_StateListen_SenderConnectorInstance" />
    </internalEndpoint>
  </connection>

  <connection>
    <name>connector_status_connection</name>
    <internalEndpoint>
      <portName>error_listener</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="QA_StateListen_SenderConnectorInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>connector_status</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="SenderComponentInstance" />
    </internalEndpoint>
  </connection>
    <connection>
    <name>write_dds_entity</name>
    <internalEndpoint>
      <portName>info_update_dds_entity</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="SenderComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>observable_dds_entity</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="QA_StateListen_SenderConnectorInstance" />
    </internalEndpoint>
  </connection>
  <connection>
    <name>timed_trigger_connection</name>
    <internalEndpoint>
      <portName>tt_scheduler</portName>
      <provider>false</provider>
      <kind>SimplexReceptacle</kind>
      <instance xmi:idref="SenderComponentInstance" />
    </internalEndpoint>
    <internalEndpoint>
      <portName>tt_scheduler</portName>
      <provider>true</provider>
      <kind>Facet</kind>
      <instance xmi:idref="TimeTriggerConnectorInstance" />
    </internalEndpoint>
  </connection>
  <artifact xmi:id="Sender_ExecArtifact">
    <name>Sender_exec</name>
    <source/>
    <node/>
    <location>Sender_exec</location>
  </artifact>
  <artifact xmi:id="Common_Connector_ExecArtifact">
    <name>common_connector_conn</name>
    <source/>
    <node/>
    <location>common_dds_opendds_conn</location>
  </artifact>
  <artifact xmi:id="Receiver_ExecArtifact">
    <name>qa_sl_receiver_exec</name>
    <source/>
    <node/>
    <location>Receiver_exec</location>
  </artifact>

  <artifact xmi:id="WriterStarterCORBAConnector_ExecArtifact">
    <name>writer_starter_corba_conn</name>
    <source/>
    <node/>
    <location>writer_starter_corba_conn</location>
  </artifact>

</Deployment:DeploymentPlan>
