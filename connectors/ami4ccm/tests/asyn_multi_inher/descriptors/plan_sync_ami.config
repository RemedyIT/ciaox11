# this plan is made for using the synchronous and asynchronous connections between Sender and AMI-connectors

#=====================================================
# Definitions for Receiver Node
#-----------------------------------------------------

# ReceiverComponent instance
nl.remedy.it.CCM.Component Hello_ReceiverComponent multi_inherit_receiver_exec create_InterMulti_Receiver_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_Receiver_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"

# Receiver CORBA Connector instance ONE
nl.remedy.it.CCM.Component Receiver_CORBA_connector_ONE multi_inherit_corba_conn create_InterMulti_One_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_One_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponent
      srr_receptacle < do_my_one

# Receiver CORBA Connector instance TWO
nl.remedy.it.CCM.Component Receiver_CORBA_connector_TWO multi_inherit_corba_conn create_InterMulti_Two_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_Two_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponent
      srr_receptacle < do_my_two

# Receiver CORBA Connector instance THREE
nl.remedy.it.CCM.Component Receiver_CORBA_connector_THREE multi_inherit_corba_conn create_InterMulti_Three_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_Three_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponent
      srr_receptacle < do_my_three


#=====================================================
# Definitions for Sender Node
#-----------------------------------------------------

# SenderComponent instance
nl.remedy.it.CCM.Component Hello_SenderComponent multi_inherit_sender_exec create_InterMulti_Sender_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_Sender_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    # the synchronous port on AMI connector One
    nl.remedy.it.DnCX11.Connection AMI_ConnectorComponentOne
      run_my_one < ami4ccm_port_ami4ccm_sync_provides     # synch_one_connection
    # the synchronous port on AMI connector Two
    nl.remedy.it.DnCX11.Connection AMI_ConnectorComponentTwo
      run_my_two < ami4ccm_port_ami4ccm_sync_provides     # synch_two_connection
    # the synchronous port on AMI connector Three
    nl.remedy.it.DnCX11.Connection AMI_ConnectorComponentThree
      run_my_three < ami4ccm_port_ami4ccm_sync_provides     # synch_three_connection


# AMI ConnectorComponent instance One
nl.remedy.it.CCM.Component AMI_ConnectorComponentOne multi_inherit_ami4ccm_conn create_InterMulti_AMI4CCM_One_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_AMI4CCM_One_Connector_AMI4CCM_Connector_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_one    # run_asynch_one_connection
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connector_ONE
      ami4ccm_port_ami4ccm_uses < srr_facet

# AMI ConnectorComponent instance Two
nl.remedy.it.CCM.Component AMI_ConnectorComponentTwo multi_inherit_ami4ccm_conn create_InterMulti_AMI4CCM_Two_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_AMI4CCM_Two_Connector_AMI4CCM_Connector_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_two    # run_asynch_two_connection
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connector_TWO
      ami4ccm_port_ami4ccm_uses < srr_facet

# AMI ConnectorComponent instance Three
nl.remedy.it.CCM.Component AMI_ConnectorComponentThree multi_inherit_ami4ccm_conn create_InterMulti_AMI4CCM_Three_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterMulti_AMI4CCM_Three_Connector_AMI4CCM_Connector_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_three    # run_asynch_three_connection
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connector_THREE
      ami4ccm_port_ami4ccm_uses < srr_facet
