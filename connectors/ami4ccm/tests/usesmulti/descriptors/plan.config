#=====================================================
# Definitions for Receiver Node
#-----------------------------------------------------

# ReceiverComponent instance A
nl.remedy.it.CCM.Component Hello_ReceiverComponentA u_m_receiver_exec create_UsesMulti_Receiver_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_UsesMulti_Receiver_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
nl.remedy.it.CCM.Component Receiver_CORBA_connectorA asyn_usesmulti_corba_conn create_UsesMulti_One_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_UsesMulti_One_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponentA
      srr_receptacle < do_my_one

# ReceiverComponent instance B
nl.remedy.it.CCM.Component Hello_ReceiverComponentB u_m_receiver_exec create_UsesMulti_Receiver_Impl
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
nl.remedy.it.CCM.Component Receiver_CORBA_connectorB asyn_usesmulti_corba_conn create_UsesMulti_One_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_UsesMulti_One_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponentB
      srr_receptacle < do_my_one

# ReceiverComponent instance C
nl.remedy.it.CCM.Component Hello_ReceiverComponentC u_m_receiver_exec create_UsesMulti_Receiver_Impl
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
nl.remedy.it.CCM.Component Receiver_CORBA_connectorC asyn_usesmulti_corba_conn create_UsesMulti_One_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_UsesMulti_One_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponentC
      srr_receptacle < do_my_one

#=====================================================
# Definitions for Sender Node
#-----------------------------------------------------

# SenderComponent instance
nl.remedy.it.CCM.Component Hello_SenderComponent u_m_sender_exec create_UsesMulti_Sender_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_UsesMulti_Sender_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    # the synchronous port on the AMI connector's, test 2 of 3
    nl.remedy.it.DnCX11.Connection AMI_ConnectorComponentA
      run_my_um_one < ami4ccm_port_ami4ccm_sync_provides     # synch_foo_connectionA
    nl.remedy.it.DnCX11.Connection AMI_ConnectorComponentB
      run_my_um_one < ami4ccm_port_ami4ccm_sync_provides     # synch_foo_connectionB

# AMI ConnectorComponent instance A
nl.remedy.it.CCM.Component AMI_ConnectorComponentA asyn_usesmulti_ami4ccm_conn create_UsesMulti_AMI4CCM_One_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_UsesMulti_AMI4CCM_One_Connector_AMI4CCM_Connector_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_um_one    # run_asynch_foo_connectionA
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connectorA
      ami4ccm_port_ami4ccm_uses < srr_facet               # do_foo_connectionA

# AMI ConnectorComponent instance B
nl.remedy.it.CCM.Component AMI_ConnectorComponentB asyn_usesmulti_ami4ccm_conn create_UsesMulti_AMI4CCM_One_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_um_one     # run_asynch_foo_connectionB
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connectorB
      ami4ccm_port_ami4ccm_uses < srr_facet               # do_foo_connectionB

# AMI ConnectorComponent instance C
nl.remedy.it.CCM.Component AMI_ConnectorComponentC asyn_usesmulti_ami4ccm_conn create_UsesMulti_AMI4CCM_One_Connector_AMI4CCM_Connector_Impl
     nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_um_one    # run_asynch_foo_connectionC
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connectorC
      ami4ccm_port_ami4ccm_uses < srr_facet               # do_foo_connectionC
