%if has_toplevel_annotation?
// generated from <%= ridl_template_path %>
% if typedef_sequence_dds_type_needed?
<%= typedef_sequence_dds_type %>
% end

local interface <%= name %>DataWriter : ::DDS::DataWriter
{
  DDS::InstanceHandle_t register_instance(
      in <%= unescaped_name %> instance_data);
  DDS::InstanceHandle_t register_instance_w_timestamp(
      in <%= unescaped_name %> instance_data,
      in DDS::Time_t source_timestamp);
  DDS::ReturnCode_t unregister_instance(
      in <%= unescaped_name %> instance_data,
      in DDS::InstanceHandle_t  handle);
  DDS::ReturnCode_t unregister_instance_w_timestamp(
      in <%= unescaped_name %> instance_data,
      in DDS::InstanceHandle_t  handle,
      in DDS::Time_t source_timestamp);
  DDS::ReturnCode_t write(
      in <%= unescaped_name %> instance_data,
      in DDS::InstanceHandle_t handle);
  DDS::ReturnCode_t write_w_timestamp(
      in <%= unescaped_name %> instance_data,
      in DDS::InstanceHandle_t handle,
      in DDS::Time_t source_timestamp);
  DDS::ReturnCode_t dispose(
      in <%= unescaped_name %> instance_data,
      in DDS::InstanceHandle_t instance_handle);
  DDS::ReturnCode_t dispose_w_timestamp(
      in <%= unescaped_name %> instance_data,
      in DDS::InstanceHandle_t instance_handle,
      in DDS::Time_t source_timestamp);
  DDS::ReturnCode_t get_key_value(
      inout <%= unescaped_name %> key_holder,
      in DDS::InstanceHandle_t handle);
  DDS::InstanceHandle_t lookup_instance(
      in <%= unescaped_name %> instance_data);
};

local interface <%= name %>DataReader : ::DDS::DataReader
{
  DDS::ReturnCode_t read(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

  DDS::ReturnCode_t take(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

  DDS::ReturnCode_t read_w_condition(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::ReadCondition a_condition);

  DDS::ReturnCode_t take_w_condition(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::ReadCondition a_condition);

  DDS::ReturnCode_t read_next_sample(
      inout <%= unescaped_name %> data_values,
      inout DDS::SampleInfo sample_info);

  DDS::ReturnCode_t take_next_sample(
      inout <%= unescaped_name %> data_values,
      inout DDS::SampleInfo sample_info);

  DDS::ReturnCode_t read_instance(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

  DDS::ReturnCode_t take_instance(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

  DDS::ReturnCode_t read_instance_w_condition(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::ReadCondition a_condition);

  DDS::ReturnCode_t take_instance_w_condition(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::ReadCondition a_condition);

  DDS::ReturnCode_t read_next_instance(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t previous_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

  DDS::ReturnCode_t take_next_instance(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t previous_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

  DDS::ReturnCode_t read_next_instance_w_condition(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t previous_handle,
      in DDS::ReadCondition a_condition);

  DDS::ReturnCode_t take_next_instance_w_condition(
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos,
      in long max_samples,
      in DDS::InstanceHandle_t previous_handle,
      in DDS::ReadCondition a_condition);

  DDS::ReturnCode_t return_loan (
      inout <%= name %>Seq data_values,
      inout DDS::SampleInfoSeq sample_infos);

  DDS::ReturnCode_t get_key_value(
      inout <%= unescaped_name %> key_holder,
      in DDS::InstanceHandle_t handle);

  DDS::InstanceHandle_t lookup_instance(
      in <%= unescaped_name %> instance_data);
};

%end
