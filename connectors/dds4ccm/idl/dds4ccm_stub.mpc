project (ciaox11_dds4ccm_idl_gen) : install, \
                                    ciaox11_dds4ccm, \
                                    ciaox11_idldefaults {
  custom_only = 1

  idlflags += -Wb,stub_export_macro=DDS4CCM_STUB_Export \
              -Wb,stub_export_include=dds4ccm_stub_export.h \
              -Scp

  IDL_Files {
    idlflags += -Gxhst -Glem -Scdr
    dds4ccm_base.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk -Gsv -Glem
    idlflags -= -St -Sa -Scdr -Scp
    dds4ccm_query_filter.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk -Gsv -Glem -Scdr
    idlflags += -Wb,post_include=../impl/dds4ccm_log_formatters.h
    ccm_dds.idl
  }

  IDL_Files {
    idlflags -= -Gxhst
    idlflags += -Wb,skel_export_macro=DDS4CCM_SKEL_Export \
                -Wb,skel_export_include=dds4ccm_skel_export.h \
                -Gxhsk -Glem -Scdr
    dds4ccm_connector.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk
    idlflags += -Glem -Scdr
    dds_rtf2_dcps.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk
    idlflags += -Glem -Scdr
    dds4ccm_connector_status_listener.idl
    dds4ccm_data_listener_control.idl
    dds4ccm_port_status_listener.idl
    dds4ccm_state_listener_control.idl
  }

  specific {
    install_dir = connectors/dds4ccm/idl
  }
}

project (ciaox11_dds4ccm_stub) : install, \
                                 ciaox11_ccm_stub, \
                                 ciaox11_output, \
                                 ddsx11_stub, \
                                 taox11_core_anytypecode {
  after += ciaox11_dds4ccm_idl_gen

  dynamicflags += DDS4CCM_STUB_BUILD_DLL

  Header_Files {
    dds4ccm_stub_export.h
    ccm_ddsC.h
    dds4ccm_baseC.h
    dds4ccm_query_filterC.h
    dds4ccm_port_status_listenerC.h
    dds4ccm_data_listener_controlC.h
    dds4ccm_connector_status_listenerC.h
    dds4ccm_state_listener_controlC.h
    dds4ccm_connectorC.h
    dds_rtf2_dcpsC.h
  }

  Source_Files {
    dds4ccm_baseC.cpp
    dds4ccm_query_filterC.cpp
    dds4ccm_port_status_listenerC.cpp
    dds4ccm_data_listener_controlC.cpp
    dds4ccm_connector_status_listenerC.cpp
    dds4ccm_state_listener_controlC.cpp
    dds4ccm_connectorC.cpp
    dds_rtf2_dcpsC.cpp
  }

  specific {
    install_dir = connectors/dds4ccm/idl
  }
}
