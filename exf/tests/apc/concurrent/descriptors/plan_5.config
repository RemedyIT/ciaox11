#=====================================================
# Definitions for Receiver Node
#-----------------------------------------------------

# locality manager instance for locality "ReceiverLocality" on Node "ReceiverNode"
nl.remedy.it.DnCX11.LocalityManager ReceiverLocality
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Locality.ConfigFile "exf-localitymanager.config"

# ReceiverComponent instance
nl.remedy.it.CCM.Component Hello_ReceiverComponent hello_receiver_exec create_Hello_Receiver_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_Hello_Receiver_Servant"
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Artifact "hello_receiver_svnt"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.ConfigProperty threads uint16:5
    nl.remedy.it.DnCX11.ConfigProperty nl.remedy.it.Axcioma.ExF.SchedulingLane.Dispatch.Concurrent uint16:5
    nl.remedy.it.DnCX11.ConfigProperty nl.remedy.it.Axcioma.ExF.SchedulingLane.Dispatch.Policy "GROUPED"
    nl.remedy.it.DnCX11.ConfigProperty nl.remedy.it.Axcioma.ExF.SchedulingLane.Group "MTGroup"
    nl.remedy.it.DnCX11.ConfigProperty nl.remedy.it.Axcioma.ExF.SchedulingLane.Thread.Policy "Multi"
    nl.remedy.it.DnCX11.ConfigProperty nl.remedy.it.Axcioma.ExF.SchedulingLane.Thread.Count uint16:10

# Receiver CORBA Connector instance
nl.remedy.it.CCM.Component Receiver_CORBA_connector hello_corba_conn create_Hello_MyFoo_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_Hello_MyFoo_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponent
      srr_receptacle < do_my_foo

#=====================================================
# Definitions for Sender Node
#-----------------------------------------------------

# locality manager instance for locality "SenderLocality" on Node "SenderNode"
nl.remedy.it.DnCX11.LocalityManager SenderLocality
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Locality.ConfigFile "exf-localitymanager.config"

# SenderComponent instance
nl.remedy.it.CCM.Component Hello_SenderComponent hello_sender_exec create_Hello_Sender_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_Hello_Sender_Servant"
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Artifact "hello_sender_svnt"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"

# NO CORBA Connector on the sender side since the AMI4CCM connector implicitly uses CORBA.
# Since it's tightly coupled to CORBA, request/reply pattern on the receiver side should
# always be a CORBA connector.

# AMI Connector instance
nl.remedy.it.CCM.Component AMI_ConnectorComponent hello_amic_conn create_Hello_AMI4CCM_MyFoo_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_Hello_AMI4CCM_MyFoo_Connector_AMI4CCM_Connector_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_foo    # run_asynch_foo_connection
      ami4ccm_port_ami4ccm_sync_provides > run_my_foo
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connector
      ami4ccm_port_ami4ccm_uses < srr_facet
