This tests specifically demonstrates how the MPC files (and therefor
the commandline options of the RIDL compiler) can be used in a easy
and simple way.

This test demonstrates that a lot of the RIDL commandline options are merged
into one commandline option.

$CIAOX11_ROOT/MPC/config contains a number of MPC test base projects
(ciaox11_test_*.mpb). These MPC base projects support these new
commandline options.

Since most of the CIAOX11 tests have a fixed directory structure, the
ciaox11_test_* MPC base projects make sure that all include directories, library
paths and library output paths are correct.

A ciaox11 test basically has the following directory structure:
Fixed
  - base
    contains the base IDL (interface definition). Only the stub and
    lem stub files and libraries are created in this directory.
  - corba_connector
    The OMG UCM specification dictates that user defined components should
    be inter-component communication middleware agnostic. This wasn't the
    case in previous versions of CIAO and CIAOX11; the user components
    needed to link against the (CORBA)skeleton libary.
    To make the user defined components inter-component communication
    middleware agnostic, the implementation of the inter-component communication
    middleware has been moved to connectors. This means that the user
    defined component don't need to link against the (CORBA)skeleton library
    anymore. Besides a CORBA connector, one can think of a 'RPC over DDS'
    connector to establish the request-reply interaction pattern.
    In other words: the user defined components can be created, coded and
    build without having an implementation of the request-reply pattern.
    When deployed however, an implementation of the request-reply pattern
    need to be available. THEREFOR THE DECISION WHICH INTER-COMPONENT
    COMMUNICATION MIDDLEWARE TO USE IS A DEPLOYMENT DECISION IN UCM!!
    This directory contains the CORBA connector and typically contains one
    MPC file which compiles the IDL file in 'base'. The skeleton files and
    the implied CORBA connector IDL (and its stubs, servant, and executor
    files) will be generated and compiled in this directory.
  - components (sender and/or receiver)
    Typically contains one IDL file, one MPC file and the user component
    executor code (*_exec.cpp/h). The latter can be generated by the RIDL
    compiler (see the individual MPC files for more info).
    The implementation and compilation is completely independent of which
    inter-component communication middleware is used (see CORBA connector).
Variable:
  - connector(s). See components


Please also take a look at the 'gen_test'. This test also focuses
on the MPC files and the commandline options of the RIDL compiler but
in a extensive way.

Specific help and comments are added to the MPC files in this directory.
