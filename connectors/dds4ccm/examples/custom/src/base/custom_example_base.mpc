// Not using the DDSX11 MPC base projects for the tests since the directory structure
// is completely different. See ../../readme.txt for details.
project (*idl_gen) : ddsx11, ciaox11_idldefaults {
  custom_only=1

  idlflags += -Wb,base_export_macro=CUSTOM_EXAMPLE_BASE \
              -Wb,base_export_include=custom_example_base \
              -I$(CIAOX11_ROOT) \
              -o ../../build/base -SS -Gddsx11,adds -Gxhst -Gos

  IDL_Files {
    gendir = ../../build/base
    custom_example_b_defn.idl
    custom_example_ca1_msg.idl
    custom_example_ca_defn.idl
    custom_example_na_defn.idl
  }
}

// Seems that older make version are having issues with the directory structure.
// Seems like make (v 3.81) detects that ../../build/base is not available right
// at the start. It then gives the error that the *C.cpp file are not there. This
// checks is too early since they are there after the IDL compiler has run.
// Now create a stub project.
project (*stub) : ciaox11_ccm_stub, ciaox11_dds4ccm, ddsx11_stub, taox11_lib, \
                  ciaox11_dds4ccm_event {

  after += *idl_gen
  sharedname = custom_example_base_stub
  dynamicflags += CUSTOM_EXAMPLE_BASE_STUB_BUILD_DLL

  libpaths += ../../lib
  libout = ../../lib
  includes += . ../../src \
              ../../src/base \
              ../../build/base

  Source_Files {
    ../../build/base/custom_example_b_defnC.cpp
    ../../build/base/custom_example_b_defn_dds_typed_entitiesC.cpp
    ../../build/base/custom_example_ca1_msgC.cpp
    ../../build/base/custom_example_ca1_msg_dds_typed_entitiesC.cpp
    ../../build/base/custom_example_ca_defnC.cpp
    ../../build/base/custom_example_ca_defn_dds_typed_entitiesC.cpp
    ../../build/base/custom_example_na_defnC.cpp
    ../../build/base/custom_example_na_defn_dds_typed_entitiesC.cpp
  }

  Header_Files {
    ../../build/base/custom_example_b_defnC.h
    ../../build/base/custom_example_b_defn_dds_typed_entitiesC.h
    ../../build/base/custom_example_ca1_msgC.h
    ../../build/base/custom_example_ca1_msg_dds_typed_entitiesC.h
    ../../build/base/custom_example_ca_defnC.h
    ../../build/base/custom_example_ca_defn_dds_typed_entitiesC.h
    ../../build/base/custom_example_na_defnC.h
    ../../build/base/custom_example_na_defn_dds_typed_entitiesC.h
  }
}

// Runs the DDS vendor specific IDL compiler, using the
// vendor specific IDL file, generated by the *idl project.
project(*ddsx11_types_gen) : ddsx11_vendor_ts_defaults {
  after += *idl_gen
  // Special section DDS IDL
  NDDSTypeSupport_Files {
    ndds_ts_flags += -d ../../build/base -I../../build/base
    gendir = ../../build/base
    ../../build/base/custom_example_b_defn_dds.idl
    ../../build/base/custom_example_ca1_msg_dds.idl
    ../../build/base/custom_example_ca_defn_dds.idl
    ../../build/base/custom_example_na_defn_dds.idl
  }
  custom_only = 1
}

project (*ddsx11_types_impl) : ddsx11_impl {
  after += *stub *ddsx11_types_gen
  libs += *stub
  dynamicflags += CUSTOM_EXAMPLE_BASE_TYPESUPPORT_BUILD_DLL

  libout = ../../lib
  libpaths += ../../lib

  Source_Files {
    ../../build/base/custom_example_b_defn_dds.cxx
    ../../build/base/custom_example_ca1_msg_dds.cxx
    ../../build/base/custom_example_ca_defn_dds.cxx
    ../../build/base/custom_example_na_defn_dds.cxx
    ../../build/base/custom_example_b_defn_ddsPlugin.cxx
    ../../build/base/custom_example_ca1_msg_ddsPlugin.cxx
    ../../build/base/custom_example_ca_defn_ddsPlugin.cxx
    ../../build/base/custom_example_na_defn_ddsPlugin.cxx
    ../../build/base/custom_example_b_defn_ddsSupport.cxx
    ../../build/base/custom_example_ca1_msg_ddsSupport.cxx
    ../../build/base/custom_example_ca_defn_ddsSupport.cxx
    ../../build/base/custom_example_na_defn_ddsSupport.cxx
    ../../build/base/custom_example_b_defn_dds_typesupport.cpp
    ../../build/base/custom_example_ca1_msg_dds_typesupport.cpp
    ../../build/base/custom_example_ca_defn_dds_typesupport.cpp
    ../../build/base/custom_example_na_defn_dds_typesupport.cpp
  }
}
