project(ddsx11_core_impl) : install, \
                       ciaox11_rules, \
                       ddsx11_output, \
                       ddsx11_vendor_impl, \
                       ddsx11_logger, \
                       taox11_lib {

  dynamicflags += DDSX11_IMPL_BUILD_DLL

  // References to CIAOX11 are removed but the RIDL compiler still
  // adds a version check which is based on the ciaox11 version.
  // Therefor this include is added.
  includes += $(CIAOX11_ROOT)

  Header_Files {
    dds_condition.h
    dds_common.h
    dds_content_filtered_topic.h
    dds_conversion_traits.h
    dds_data_reader_listener.h
    dds_data_reader_t.h
    dds_data_writer.h
    dds_data_writer_listener.h
    dds_data_writer_t.h
    dds_domain_participant_factory.h
    dds_domain_participant.h
    dds_domain_participant_listener.h
    dds_proxy_entity_manager.h
    dds_export.h
    dds_native_entity_t.h
    dds_publisher.h
    dds_publisher_listener.h
    dds_query_condition.h
    dds_read_condition.h
    dds_status_condition.h
    dds_subscriber.h
    dds_subscriber_listener.h
    dds_topic_description.h
    dds_topic.h
    dds_topic_listener.h
    dds_traits.h
    dds_traits_base.h
    dds_type_support.h
    dds_vendor_adapter.h
    dds_vendor_conversion_traits.h
    dds_wait_set.h
    dds_data_reader_t.h
    dds_data_writer_t.h
    dds_native_entity_t.h
    dds_proxy_traits_t.h
    dds_typefactory_t.h
  }

  Source_Files {
    dds_condition.cpp
    dds_content_filtered_topic.cpp
    dds_data_reader_listener.cpp
    dds_data_writer_listener.cpp
    dds_domain_participant.cpp
    dds_domain_participant_factory.cpp
    dds_domain_participant_listener.cpp
    dds_proxy_entity_manager.cpp
    dds_publisher.cpp
    dds_publisher_listener.cpp
    dds_query_condition.cpp
    dds_read_condition.cpp
    dds_status_condition.cpp
    dds_subscriber.cpp
    dds_subscriber_listener.cpp
    dds_topic.cpp
    dds_topic_description.cpp
    dds_topic_listener.cpp
    dds_type_support.cpp
    dds_wait_set.cpp
  }

  Template_Files {
    dds_data_reader_t.cpp
    dds_data_writer_t.cpp
    dds_native_entity_t.cpp
  }

  specific {
    install_dir = ddsx11/dds
  }
}
