// -*- C++ -*-
/**
 * ****  Code generated by the RIDL Compiler ****
 * RIDL has been developed by:
 *        Remedy IT Expertise BV
 *        Duiven, GLD
 *        The Netherlands
 *        https://www.remedy.nl
 */

#ifndef __RIDL_PSDD_MESSAGE_DHJACFFF_INCLUDED__
#define __RIDL_PSDD_MESSAGE_DHJACFFF_INCLUDED__

#include "psdd4ccm/impl/psdd_traits.h"

#include /**/ "ciaox11/versionx11.h"

#if CIAOX11_MAJOR_VERSION != 2 || CIAOX11_MINOR_VERSION != 3 || CIAOX11_MICRO_VERSION != 0
#error This file was generated with another RIDL CCMX11 backend version (2.3.0). Please re-generate.
#endif

#include "messageC.h"

// generated from psdd4ccm/templates/psdd_traits/struct
namespace PSDD
{
  template <>
  struct traits< ::Test::Message>
    : public common_traits< ::Test::Message>
  {
    static std::string get_type_name () { return "Test::Message"; }

    typedef std::false_type key_only;
    typedef std::false_type no_key;

    static
    bool append_key (
        IDL::traits<PSDataOut>::ref_type& d,
        const ::Test::Message& datum)
    {
      return ::PSDD::traits< std::string>::append_key (d, datum.category ())
          ;
    }

    static
    bool append_data (
        IDL::traits<PSDataOut>::ref_type& d,
        const ::Test::Message& datum,
        bool provides_key)
    {
      if (provides_key)
      {
        return ::PSDD::traits< std::string>::append_data (d, datum.description (), false)
              && ::PSDD::traits< uint32_t>::append_data (d, datum.value (), false)
            ;
      }
      else
      {
        return ::PSDD::traits< std::string>::append_data (d, datum.category (), false)
              && ::PSDD::traits< std::string>::append_data (d, datum.description (), false)
              && ::PSDD::traits< uint32_t>::append_data (d, datum.value (), false)
            ;
      }
    }

    static
    bool extract_key (
        IDL::traits<PSDataIn>::ref_type& d,
        ::Test::Message& datum)
    {
      return ::PSDD::traits< std::string>::extract_key (d, datum.category ())
          ;
    }

    static
    bool extract_data (
        IDL::traits<PSDataIn>::ref_type& d,
        ::Test::Message& datum,
        bool provides_key)
    {
      if (provides_key)
      {
        return ::PSDD::traits< std::string>::extract_data (d, datum.description (), false)
              && ::PSDD::traits< uint32_t>::extract_data (d, datum.value (), false)
            ;
      }
      else
      {
        return ::PSDD::traits< std::string>::extract_data (d, datum.category (), false)
              && ::PSDD::traits< std::string>::extract_data (d, datum.description (), false)
              && ::PSDD::traits< uint32_t>::extract_data (d, datum.value (), false)
            ;
      }
    }
  };
} // PSDD

#endif /* __RIDL_PSDD_MESSAGE_DHJACFFF_INCLUDED__ */
