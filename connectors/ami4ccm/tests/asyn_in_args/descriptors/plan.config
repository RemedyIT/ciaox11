# this plan is made for using the synchronous and asynchronous connections between Sender and AMI-connector,

#=====================================================
# Definitions for Receiver Node
#-----------------------------------------------------

# ReceiverComponent instance
nl.remedy.it.CCM.Component Hello_ReceiverComponent in_args_t_receiver_exec create_InterInArgsT_Receiver_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterInArgsT_Receiver_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"

# Receiver CORBA Connector instance
nl.remedy.it.CCM.Component Receiver_CORBA_connector in_args_t_corba_conn create_InterInArgsT_MyFoo_SRR_CORBA_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterInArgsT_MyFoo_SRR_CORBA_Connector_Servant"
    nl.remedy.it.DnCX11.Node "ReceiverNode"
    nl.remedy.it.DnCX11.Locality "ReceiverLocality"
    nl.remedy.it.DnCX11.Connection Hello_ReceiverComponent
      srr_receptacle < do_my_foo

#=====================================================
# Definitions for Sender Node
#-----------------------------------------------------

# SenderComponent instance
nl.remedy.it.CCM.Component Hello_SenderComponent in_args_t_sender_exec create_InterInArgsT_Sender_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterInArgsT_Sender_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
# the synchronous port on the AMI connector
     nl.remedy.it.DnCX11.Connection AMI_ConnectorComponent
        run_my_foo < ami4ccm_port_ami4ccm_sync_provides     # synch_foo_connection

# AMI ConnectorComponent instance
nl.remedy.it.CCM.Component AMI_ConnectorComponent in_args_t_ami4ccm_conn create_InterInArgsT_AMI4CCM_MyFoo_Connector_AMI4CCM_Connector_Impl
    nl.remedy.it.DnCX11.ExecParameter nl.remedy.it.DnCX11.Servant.Factory "create_InterInArgsT_AMI4CCM_MyFoo_Connector_AMI4CCM_Connector_Servant"
    nl.remedy.it.DnCX11.Node "SenderNode"
    nl.remedy.it.DnCX11.Locality "SenderLocality"
    nl.remedy.it.DnCX11.Connection Hello_SenderComponent
      ami4ccm_port_ami4ccm_provides > sendc_run_my_foo    # run_asynch_foo_connection
    nl.remedy.it.DnCX11.Connection Receiver_CORBA_connector
      ami4ccm_port_ami4ccm_uses < srr_facet
