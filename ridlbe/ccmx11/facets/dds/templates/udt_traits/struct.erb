
// generated from <%= ridl_template_path %>
// Unaliased type : <%= resolved_cxxtype %>
% alias_md5 =  resolved_cxxtype.to_md5
// MD5            : <%= alias_md5 %>
#if !defined(_ALIAS_<%= alias_md5 %>_UDT_TRAITS_DECL_)
#define _ALIAS_<%= alias_md5 %>_UDT_TRAITS_DECL_

namespace DDSX11
{
  /// Conversion traits for <%= scoped_cxxname %> to DDS
  template<>
  inline <%= native_scoped_cxxtype %>&
  to_dds<<%= native_scoped_cxxtype %>, <%= scoped_cxxtype %>> (
    <%= native_scoped_cxxtype %> &to, const <%= scoped_cxxtype %> &from)
  {
%members.each do |_m|
    ::DDSX11::to_dds (to.<%= _m.cxxname %>, from.<%= _m.cxxname %> ());
%end
    return to;
  }

  /// Conversion traits for <%= scoped_cxxname %> from DDS
  template<>
  inline <%= scoped_cxxtype %>&
  from_dds<<%= native_scoped_cxxtype %>, <%= scoped_cxxtype %>> (
    <%= scoped_cxxtype %> &to, const <%= native_scoped_cxxtype %> &from)
  {
%members.each do |_m|
    ::DDSX11::from_dds (to.<%= _m.cxxname %> (), from.<%= _m.cxxname  %>);
%end
    return to;
  }

  /**
   * DDSX11 traits for <%= scoped_cxxname %>
   */
  template<>
  struct traits<<%= scoped_cxxtype %>>
    : public common_traits<<%= scoped_cxxtype %>, <%= native_scoped_cxxtype %>>
    , public convert_in<<%= scoped_cxxtype %>, <%= native_scoped_cxxtype %>>
    , public convert_retn<<%= scoped_cxxtype %>, <%= native_scoped_cxxtype %>>
    , public convert_out_by_ref<<%= scoped_cxxtype %>, <%= native_scoped_cxxtype %>>
  {
  };
} // namespace DDSX11
#endif /* _ALIAS_<%= alias_md5 %>_UDT_TRAITS_DECL_ */
