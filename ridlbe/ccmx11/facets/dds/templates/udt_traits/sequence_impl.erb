namespace DDSX11
{
  /// Conversion of <%= scoped_cxxname %> to DDS
  template<>
  inline ::DDS_Native<%= scoped_cxxtype %>&
  to_dds< ::DDS_Native<%= scoped_cxxtype %>, <%= scoped_cxxtype %>> (
    ::DDS_Native<%= scoped_cxxtype %> &to, const <%= scoped_cxxtype %> &from)
  {
%if is_bounded_string_type?
    return DDSX11::bounded_string_sequence_to_dds(to, from);
%elsif is_string_type?
    return DDSX11::string_sequence_to_dds(to, from);
%else
    return DDSX11::sequence_to_dds(to, from);
%end
  }

  /// Conversion of <%= cxxname %> from DDS
  template<>
  inline <%= scoped_cxxtype %>&
  from_dds< ::DDS_Native<%= scoped_cxxtype %>, <%= scoped_cxxtype %>> (
    <%= scoped_cxxtype %> &to, const ::DDS_Native<%= scoped_cxxtype %> &from)
  {
%if is_bounded_string_type?
    return DDSX11::bounded_string_sequence_from_dds(to, from);
%elsif is_boolean_type? && is_bounded?
    return DDSX11::bounded_boolean_sequence_from_dds(to, from);
%else
    return DDSX11::sequence_from_dds(to, from);
%end
  }

  template <>
  struct traits< <%= scoped_cxxtype %>, ::DDS_Native<%= scoped_cxxtype %>>
    : public common_traits< <%= scoped_cxxtype %>, ::DDS_Native<%= scoped_cxxtype %>>
    , public convert_in< <%= scoped_cxxtype %>, ::DDS_Native<%= scoped_cxxtype %>>
    , public convert_out_by_ref< <%= scoped_cxxtype %>, ::DDS_Native<%= scoped_cxxtype %>>
    , public convert_retn< <%= scoped_cxxtype %>, ::DDS_Native<%= scoped_cxxtype %>>
  {
  };
} // DDSX11
