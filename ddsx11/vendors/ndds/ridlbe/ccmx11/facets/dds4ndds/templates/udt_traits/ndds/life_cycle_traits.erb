%if generate_lifecycle_traits?
  // generated from <%= ridl_template_path %>

  /// Life cycle management for <%= scoped_cxxname %> native DDS type
  template<>
  inline void dds_init (::DDS_Native<%= scoped_cxxtype %>& sample)
% if is_visitor_type?(IDL::CCMX11::StructVisitor)
  {
%  members.each do |_m|
    ::DDSX11::dds_init (sample.<%= _m.cxxname %>);
%  end
  }
% elsif is_visitor_type?(IDL::CCMX11::UnionVisitor)
  {
%  members.each do |_m|
    ::DDSX11::dds_init (sample._u.<%= _m.cxxname %>);
%  end
    ::DDSX11::dds_init (sample._d);
  }
% else
  {
%  _arr_iter = 0
%  _dimensions = ''
%  cxxdim_sizes.each do |_s|
%   _iter="iter_#{_arr_iter}"
%   _dimensions = _dimensions + "[#{_iter}]"
%   inc_nest
  for (<%= scoped_cxxtype %>::size_type <%= _iter %> {}; <%= _iter %> < <%= cxxdim_sizes[_arr_iter] %>; ++<%= _iter %>)
  {
%   _arr_iter = _arr_iter + 1
%  end
%  inc_nest
    ::DDSX11::dds_init (sample<%= _dimensions %>);
%  cxxdim_sizes.each do |_s|
%   dec_nest
  }
%  end
%  dec_nest
  }
% end
% if has_toplevel_annotation?
  template<>
  inline void dds_finalize (::DDS_Native<%= scoped_cxxtype %>& sample)
  {
    ::DDS_Native<%= scoped_cxxtype %>_finalize (std::addressof (sample));
  }
% end
%end
