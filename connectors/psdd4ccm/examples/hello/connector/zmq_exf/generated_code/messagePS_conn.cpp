/**
 * ****  Code generated by the RIDL Compiler ****
 * RIDL has been developed by:
 *        Remedy IT Expertise BV
 *        The Netherlands
 *        https://www.remedy.nl
 */

#include "messagePS_conn.h"
#include "messagePSEC.h"
// generated from exf4psdd/templates/conn_templ/src/psdd4ccm/exf/pre_psdd4ccm_evs
#include "connectors/psdd4ccm/impl/exf/psdd4ccm_exf_event_strategies_t.h"
// generated from psdd4ccm/templates/conn_templ/src/psdd4ccm/exf/pre_psdd4ccm
#include "connectors/psdd4ccm/impl/psdd4ccm_event_connector_t.h"
// generated from psdd4ccm/templates/conn_templ/src/psdd4ccm/exf/include
#include "./message_psdd_traits.h"

// generated from ccmx11/templates/conn_templ/src/psdd4ccm/exf/connector
namespace Test_Msg_PSDD_Event_Impl
{
  struct CCM_Test_Msg_PSDD_Event_Traits
  {
    using base_type = ::Test::Msg::CCM_PSDD_Event;
    using context_type = ::Test::Msg::CCM_PSDD_Event_Context;

    // generated from psdd4ccm/templates/conn_templ/src/psdd4ccm/exf/connector_pre_extra
    typedef ::CIAOX11::PSDD4CCM::ExF::PushConsumerEventStrategy_T<
        CCM_Test_Msg_PSDD_Event_Traits> event_strategy_type;

    typedef ::PSDD::traits<::Test::Message> topic_psdd_traits_type;
    typedef ::PSDD::ServiceHelper service_helper_type;
    typedef Test::Msg::CCM_Serializer custom_serializer_type;

    struct supplier_traits
    {
      using data_type = Test::Msg::CCM_Publisher;
    };

    struct consumer_traits
    {
      using data_type = Test::Msg::CCM_Getter;
      using data_listener_type = ::Test::Msg::Listener;
      using data_subscriber_type = Test::Msg::CCM_Subscriber;
    };
    using topic_name_type = std::string;
    using type_name_type = std::string;
    using publish_type = bool;
    using subscribe_type = bool;
  };

  using PSDD_Event_exec_i = CIAOX11::PSDD::Event_Connector_T <
       CCM_Test_Msg_PSDD_Event_Traits,
       ::Test::Message,
       ::Test::MessageSeq_t>;
} // namespace Test_Msg_PSDD_Event_Impl

extern "C" void
create_Test_Msg_PSDD_Event_Impl (
  IDL::traits<Components::EnterpriseComponent>::ref_type& component)
{
  component = CORBA::make_reference <Test_Msg_PSDD_Event_Impl::PSDD_Event_exec_i> ();
}

// -*- END -*-
