/**
 * @file    ami4ccm_idltest.idl
 * @author  Johnny Willemsen
 *
 * @brief   AMI4CCM IDL test
 *
 * @copyright Copyright (c) Remedy IT Expertise BV
 */

#ifndef AMI4CCM_IDL_TEST_IDL
#define AMI4CCM_IDL_TEST_IDL

#pragma ami4ccm interface "Hello::MyFoo"
#pragma ami4ccm interface "Hello::MyDerived"
#pragma ami4ccm interface "Hello::MyBar"
#pragma ami4ccm interface "Foo::MyFoo"
#pragma ami4ccm interface "Foo::MyBar"
#pragma ami4ccm interface "Bar::One"
#pragma ami4ccm interface "Bar::Two"
#pragma ami4ccm interface "Bar::Three"
#pragma ami4ccm interface "Bar::public"
#pragma ami4ccm interface "Bar::private"

#pragma ami4ccm idl "ami4ccm_idltestA.idl"

module Hello
{
  enum test_enum
  {
    ZERO,
    ONE,
    TWO
  };

  exception InternalError
    {
      long id;
      string error_string;
    };

  interface MyFoo
    {
      enum ReturnValue {
        RETURN_VALUE_OKAY,
        RETURN_VALUE_ERROR
      };

      MyFoo::ReturnValue returnTest();
      void passTest (in MyFoo::ReturnValue v1, inout MyFoo::ReturnValue v2, out MyFoo::ReturnValue v3);

      oneway void foo_oneway (in string in_str);

      long foo_return (in string in_str, out string answer)
        raises (InternalError);
      void foo_no_return (in string in_str, out string answer)
        raises (InternalError);
      void hello (out long answer)
        raises (InternalError);
      void no_answer (in string in_str)
        raises (InternalError);
      test_enum enum_return(in string in_str)
        raises (InternalError);
      void enum_no_return(in string in_str,
                          in test_enum in_test,
                          out test_enum out_test)
        raises (InternalError);

      attribute short rw_attrib
        getraises (InternalError)
        setraises (InternalError);

      readonly attribute short ro_attrib
        raises (InternalError);

      attribute MyFoo::ReturnValue my_return_test;
    };

  interface MyDerived : MyFoo
    {
      long do_someting (in string str);
      attribute long my_attribute;
    };

  interface MyBar : MyDerived
    {
      double bar_return (in string in_str, in string answer)
        raises (InternalError);
      void bye (out long answer, out double db)
        raises (InternalError);
      attribute short rw_bar_attrib
        getraises (InternalError)
        setraises (InternalError);
      readonly attribute short ro_bar_attrib
        raises (InternalError);
    };

  interface X
    {
      void mydosomething (in string str);
    };
};

module Foo
{
  struct TestTopic
    {
      string key;
      long x;
    };

  interface MyFoo
    {
      long myop (in TestTopic topic);
    };

  interface MyBar : MyFoo
    {
      TestTopic mybarop (in string str, in long lg, out double db);
    };

};

module Bar
{
  struct TestTopic
    {
      string key;
      long x;
    };

  interface One
    {
      long myop (in TestTopic topic);
      Hello::MyFoo::ReturnValue returnTest();
      void passTest (in Hello::MyFoo::ReturnValue v1, inout Hello::MyFoo::ReturnValue v2, out Hello::MyFoo::ReturnValue v3);
      attribute Hello::MyFoo::ReturnValue my_return_test;
      attribute short return;
      attribute short _unescaped_return;
      void class ();
      void _void (inout string virtual, inout string _interface);
    };

  interface Two
    {
      TestTopic mybarop (in string str, in long lg, out double db);
    };

  interface Three : One, Two
    {
    };

  interface _private
    {
    };

  interface _public : _private
    {
    };
};

#endif /* AMI4CCM_IDL_TEST_IDL */
